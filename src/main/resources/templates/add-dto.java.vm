package ${package.Parent}.domain.dto;

#foreach($pkg in ${table.importPackages})
#if($pkg != "com.baomidou.mybatisplus.annotation.TableName")
import $pkg;
#end
#end
#if(${springdoc})
import io.swagger.v3.oas.annotations.media.Schema;
#elseif(${swagger})
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
#end
#if(${entityLombokModel})
import lombok.Getter;
import lombok.Setter;
    #if(${chainModel})
    import lombok.experimental.Accessors;
    #end
#end

/**
 * <p>
 * $!{table.comment}
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
#if(${entityLombokModel})
@Getter
@Setter
    #if(${chainModel})
    @Accessors(chain = true)
    #end
#end
#if(${springdoc})
@Schema(name = "${entity}", description = "$!{table.comment}")
#elseif(${swagger})
@ApiModel(value = "${entity}对象", description = "$!{table.comment}")
#end
#if(${superEntityClass})
public class ${entity} extends ${superEntityClass}#if(${activeRecord})<${entity}>#end {
#elseif(${activeRecord})
public class ${entity}AddDTO {
#elseif(${entitySerialVersionUID})
public class ${entity}AddDTO implements Serializable {
#else
public class ${entity}AddDTO {
#end
#if(${entitySerialVersionUID})

#end
## ----------  BEGIN 字段循环遍历  ----------
#foreach($field in ${table.fields})

#if(${field.keyFlag})
    #set($keyPropertyName=${field.propertyName})
#end
#if("$!field.comment" != "")
    #if(${springdoc})
    @Schema(description = "${field.comment}")
    #elseif(${swagger})
    @ApiModelProperty("${field.comment}")
    #else
    /**
     * ${field.comment}
     */
    #end
#end
    private ${field.propertyType} ${field.propertyName};
#end
## ----------  END 字段循环遍历  ----------
#if(!${entityLombokModel})
    #foreach($field in ${table.fields})
        #if(${field.propertyType.equals("boolean")})
            #set($getprefix="is")
        #else
            #set($getprefix="get")
        #end

        public ${field.propertyType} ${getprefix}${field.capitalName}() {
        return ${field.propertyName};
    }

        #if(${chainModel})
        public ${entity} set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
        #else
            public void set${field.capitalName}(${field.propertyType} ${field.propertyName}) {
        #end
        this.${field.propertyName} = ${field.propertyName};
        #if(${chainModel})
            return this;
        #end
    }
    #end
    ## --foreach end---
#end
## --end of #if(!${entityLombokModel})--
#if(${entityColumnConstant})
    #foreach($field in ${table.fields})

        public static final String ${field.name.toUpperCase()} = "${field.name}";
    #end
#end
}

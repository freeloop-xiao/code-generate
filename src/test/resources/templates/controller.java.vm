package $!{package.Controller};

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.*;
import org.springframework.http.ResponseEntity;
import org.springframework.http.HttpStatus;
import lombok.AllArgsConstructor;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import java.util.Map;
import javax.validation.Valid;
import $!{package.Entity}.$!{entity};
import ${package.Parent}.domain.dto.${entity}AddDTO;
import ${package.Parent}.domain.dto.${entity}EditDTO;
import ${package.Parent}.domain.vo.${entity}VO;
import $!{package.Service}.I$!{entity}Service;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author $!{author}
 * @since $!{date}
 */
@Api(tags = "接口")
@RestController
@AllArgsConstructor
@RequestMapping("/$!{table.entityPath}")
public class $!{table.controllerName} {

    private final I$!{entity}Service $!{table.entityPath}Service;



    /**
     * 添加
     *
     * @param  $!{table.entityPath}  实体
     * @return success/false
     */
    @ApiOperation(value = "添加", notes = "添加")
    @PostMapping
    public ResponseEntity<Boolean> add(@Valid @RequestBody $!{entity}AddDTO $!{table.entityPath}) {
        return ResponseEntity.status(HttpStatus.CREATED).body($!{table.entityPath}Service.add($!{table.entityPath}));
    }


    /**
    * 删除
    *
    * @param id ID
    * @return success/false
    */
    @ApiOperation(value = "删除", notes = "删除")
    @DeleteMapping("/{id}")
    public ResponseEntity<Boolean> delete(@PathVariable Long id) {
        return ResponseEntity.ok().build();
    }


    /**
     * 修改
     *
     * @param  $!{table.entityPath}  实体
     * @return success/false
     */
    @ApiOperation(value = "修改", notes = "修改")
    @PutMapping
    public ResponseEntity<?> edit(@Valid @RequestBody $!{entity}EditDTO $!{table.entityPath}) {
        return ResponseEntity.ok($!{table.entityPath}Service.edit($!{table.entityPath}));
    }


    /**
    * 通过ID查询
    *
    * @param id ID
    * @return $!{entity}VO
    */
    @ApiOperation(value = "获取详情", notes = "获取详情")
    @GetMapping("/{id}")
    public ResponseEntity<${entity}VO> get(@PathVariable Long id) {
        return ResponseEntity.ok($!{table.entityPath}Service.get(id));
    }


    /**
    * 分页查询信息
    *
    * @param params 分页对象
    * @return 分页对象
    */
    @ApiOperation(value = "分页获取", notes = "分页获取")
    @PostMapping("/page")
    public ResponseEntity<Page> page(@RequestBody Map<Object, Object> params) {
        return ResponseEntity.ok(((Page)$!{table.entityPath}Service.page(null)));
    }


}
